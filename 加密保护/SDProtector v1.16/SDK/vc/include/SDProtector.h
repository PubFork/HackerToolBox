#ifndef __SDPROTECTOR_H__
#define __SDPROTECTOR_H__


/* borland cpp compiler */

#ifndef __SDPROTECTOR_MACROS__

 #ifdef __BORLANDC__

 #define DEMO_BLOCK_START __emit__  (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x44,0x45,0x4D,0x4F,\
                                     0x5F,0x53,0x54,0x51,0x52,0xCC);
 #define DEMO_BLOCK_END   __emit__  (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x44,0x45,0x4D,0x4F,\
                                     0x5F,0x45,0x4E,0x44,0x90,0xCC);

 #define LOCK_BLOCK_START __emit__ (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x4C,0x4F,0x43,0x4B,\
                                     0x5F,0x53,0x54,0x51,0x52,0xCC);
 #define LOCK_BLOCK_END   __emit__ (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x4C,0x4F,0x43,0x4B,\
                                     0x5F,0x45,0x4E,0x44,0x90,0xCC);

 #define CLEAR_BLOCK_START __emit__ (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x43,0x4C,0x45,0x41,\
                                     0x5F,0x53,0x54,0x51,0x52,0xCC);
 #define CLEAR_BLOCK_END   __emit__ (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x43,0x4C,0x45,0x41,\
                                     0x5F,0x45,0x4E,0x44,0x90,0xCC);
                                     
 #define EMBED_BLOCK_START __emit__ (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                        0x63,0x74,0x6F,0x72,0x5F,0x45,0x4D,0x42,0x45,\
                                        0x5F,0x53,0x54,0x51,0x52,0xCC);
 #define EMBED_BLOCK_END   __emit__ (0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                       0x63,0x74,0x6F,0x72,0x5F,0x45,0x4D,0x42,0x45,\
                                       0x5F,0x45,0x4E,0x44,0x90,0xCC);
 

 #define __SDPROTECTOR_MACROS__
 #endif

#endif

/* intel cpp compiler */

#ifndef __SDPROTECTOR_MACROS__

 #ifdef __ICL

 #define DEMO_BLOCK_START \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x44 \
 __asm __emit 0x45 \
 __asm __emit 0x4D \
 __asm __emit 0x4F \
 __asm __emit 0x5F \
 __asm __emit 0x53 \
 __asm __emit 0x54 \
 __asm __emit 0x51 \
 __asm __emit 0x52 \
 __asm __emit 0xCC

 #define DEMO_BLOCK_END \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x44 \
 __asm __emit 0x45 \
 __asm __emit 0x4D \
 __asm __emit 0x4F \
 __asm __emit 0x5F \
 __asm __emit 0x45 \
 __asm __emit 0x4E \
 __asm __emit 0x44 \
 __asm __emit 0x90 \
 __asm __emit 0xCC


 #define LOCK_BLOCK_START \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x4C \
 __asm __emit 0x4F \
 __asm __emit 0x43 \
 __asm __emit 0x4B \
 __asm __emit 0x5F \
 __asm __emit 0x53 \
 __asm __emit 0x54 \
 __asm __emit 0x51 \
 __asm __emit 0x52 \
 __asm __emit 0xCC

 #define LOCK_BLOCK_END \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x4C \
 __asm __emit 0x4F \
 __asm __emit 0x43 \
 __asm __emit 0x4B \
 __asm __emit 0x5F \
 __asm __emit 0x45 \
 __asm __emit 0x4E \
 __asm __emit 0x44 \
 __asm __emit 0x90 \
 __asm __emit 0xCC


 #define CLEAR_BLOCK_START \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x43 \
 __asm __emit 0x4C \
 __asm __emit 0x45 \
 __asm __emit 0x41 \
 __asm __emit 0x5F \
 __asm __emit 0x53 \
 __asm __emit 0x54 \
 __asm __emit 0x51 \
 __asm __emit 0x52 \
 __asm __emit 0xCC

 #define CLEAR_BLOCK_END \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x43 \
 __asm __emit 0x4C \
 __asm __emit 0x45 \
 __asm __emit 0x41 \
 __asm __emit 0x5F \
 __asm __emit 0x45 \
 __asm __emit 0x4E \
 __asm __emit 0x44 \
 __asm __emit 0x90 \
 __asm __emit 0xCC

#define EMBED_BLOCK_START \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x45 \
 __asm __emit 0x4D \
 __asm __emit 0x42 \
 __asm __emit 0x45 \
 __asm __emit 0x5F \
 __asm __emit 0x53 \
 __asm __emit 0x54 \
 __asm __emit 0x51 \
 __asm __emit 0x52 \
 __asm __emit 0xCC


 #define EMBED_BLOCK_END \
 __asm __emit 0xEB \
 __asm __emit 0x16 \
 __asm __emit 0x53 \
 __asm __emit 0x44 \
 __asm __emit 0x50 \
 __asm __emit 0x72 \
 __asm __emit 0x6F \
 __asm __emit 0x74 \
 __asm __emit 0x65 \
 __asm __emit 0x63 \
 __asm __emit 0x74 \
 __asm __emit 0x6F \
 __asm __emit 0x72 \
 __asm __emit 0x5F \
 __asm __emit 0x45 \
 __asm __emit 0x4D \
 __asm __emit 0x42 \
 __asm __emit 0x45 \
 __asm __emit 0x5F \
 __asm __emit 0x45 \
 __asm __emit 0x4E \
 __asm __emit 0x44 \
 __asm __emit 0x90 \
 __asm __emit 0xCC

 #define __SDPROTECTOR_MACROS__

 #endif
#endif


/* LCC by Jacob Navia */

#ifndef __SDPROTECTOR_MACROS__

 #ifdef __LCC__

 #define DEMO_BLOCK_START  _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x44,0x45,0x4D,0x4F,\
                                     0x5F,0x53,0x54,0x51,0x52,0xCC");
 #define DEMO_BLOCK_END    _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x44,0x45,0x4D,0x4F,\
                                     0x5F,0x45,0x4E,0x44,0x90,0xCC");

 #define LOCK_BLOCK_START _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x4C,0x4F,0x43,0x4B,\
                                     0x5F,0x53,0x54,0x51,0x52,0xCC");
 #define LOCK_BLOCK_END   _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x4C,0x4F,0x43,0x4B,\
                                     0x5F,0x45,0x4E,0x44,0x90,0xCC");

 #define CLEAR_BLOCK_START _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x43,0x4C,0x45,0x41,\
                                     0x5F,0x53,0x54,0x51,0x52,0xCC");
 #define CLEAR_BLOCK_END   _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x43,0x4C,0x45,0x41,\
                                     0x5F,0x45,0x4E,0x44,0x90,0xCC");
 #define EMBED_BLOCK_START _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x45,0x4D,0x42,0x45,\
                                     0x5F,0x53,0x54,0x51,0x52,0xCC");
 #define EMBED_BLOCK_END   _asm(" .byte\t0xEB,0x16,0x53,0x44,0x50,0x72,0x6F,0x74,0x65,\
                                     0x63,0x74,0x6F,0x72,0x5F,0x45,0x4D,0x42,0x45,\
                                     0x5F,0x45,0x4E,0x44,0x90,0xCC");                             
                                     
                                    

 #define __SDPROTECTOR_MACROS__
 #endif

#endif


#ifndef __SDPROTECTOR_MACROS__

#define DEMO_BLOCK_START \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x44 \
 __asm _emit 0x45 \
 __asm _emit 0x4D \
 __asm _emit 0x4F \
 __asm _emit 0x5F \
 __asm _emit 0x53 \
 __asm _emit 0x54 \
 __asm _emit 0x51 \
 __asm _emit 0x52 \
 __asm _emit 0xCC

 #define DEMO_BLOCK_END \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x44 \
 __asm _emit 0x45 \
 __asm _emit 0x4D \
 __asm _emit 0x4F \
 __asm _emit 0x5F \
 __asm _emit 0x45 \
 __asm _emit 0x4E \
 __asm _emit 0x44 \
 __asm _emit 0x90 \
 __asm _emit 0xCC


 #define LOCK_BLOCK_START \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x4C \
 __asm _emit 0x4F \
 __asm _emit 0x43 \
 __asm _emit 0x4B \
 __asm _emit 0x5F \
 __asm _emit 0x53 \
 __asm _emit 0x54 \
 __asm _emit 0x51 \
 __asm _emit 0x52 \
 __asm _emit 0xCC

 #define LOCK_BLOCK_END \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x4C \
 __asm _emit 0x4F \
 __asm _emit 0x43 \
 __asm _emit 0x4B \
 __asm _emit 0x5F \
 __asm _emit 0x45 \
 __asm _emit 0x4E \
 __asm _emit 0x44 \
 __asm _emit 0x90 \
 __asm _emit 0xCC


 #define CLEAR_BLOCK_START \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x43 \
 __asm _emit 0x4C \
 __asm _emit 0x45 \
 __asm _emit 0x41 \
 __asm _emit 0x5F \
 __asm _emit 0x53 \
 __asm _emit 0x54 \
 __asm _emit 0x51 \
 __asm _emit 0x52 \
 __asm _emit 0xCC

 #define CLEAR_BLOCK_END \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x43 \
 __asm _emit 0x4C \
 __asm _emit 0x45 \
 __asm _emit 0x41 \
 __asm _emit 0x5F \
 __asm _emit 0x45 \
 __asm _emit 0x4E \
 __asm _emit 0x44 \
 __asm _emit 0x90 \
 __asm _emit 0xCC


 #define EMBED_BLOCK_START \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x45 \
 __asm _emit 0x4D \
 __asm _emit 0x42 \
 __asm _emit 0x45 \
 __asm _emit 0x5F \
 __asm _emit 0x53 \
 __asm _emit 0x54 \
 __asm _emit 0x51 \
 __asm _emit 0x52 \
 __asm _emit 0xCC

 #define EMBED_BLOCK_END \
 __asm _emit 0xEB \
 __asm _emit 0x16 \
 __asm _emit 0x53 \
 __asm _emit 0x44 \
 __asm _emit 0x50 \
 __asm _emit 0x72 \
 __asm _emit 0x6F \
 __asm _emit 0x74 \
 __asm _emit 0x65 \
 __asm _emit 0x63 \
 __asm _emit 0x74 \
 __asm _emit 0x6F \
 __asm _emit 0x72 \
 __asm _emit 0x5F \
 __asm _emit 0x45 \
 __asm _emit 0x4D \
 __asm _emit 0x42 \
 __asm _emit 0x45 \
 __asm _emit 0x5F \
 __asm _emit 0x45 \
 __asm _emit 0x4E \
 __asm _emit 0x44 \
 __asm _emit 0x90 \
 __asm _emit 0xCC

#endif

#define SDP_IsRegistered()                                  ::MessageBox( (HWND)-1,NULL,NULL,0)
/* retrieve registration name from license key file */
#define SDP_GetRegistrationName(szRegistrationName,iMaxLen) ::MessageBox( (HWND)-2,(LPSTR)szRegistrationName,NULL,(UINT)iMaxLen)

/* get key expiration date */
#define SDP_GetKeyExpirationDate(lpSystemTime)              ::MessageBox( (HWND)-3,NULL,NULL,(UINT)lpSystemTime)

/* get key expiration date */
#define SDP_GetExpirationDate(lpSystemTime)                 ::MessageBox( (HWND)-4,NULL,NULL,(UINT)lpSystemTime)

#define SDP_GetNumOfDaysLeft(lpdwNum)                       ::MessageBox( (HWND)-5,NULL,NULL,(UINT)lpdwNum)

#define SDP_GetNumOfExecutionsLeft(lpdwNum)                 ::MessageBox( (HWND)-6,NULL,NULL,(UINT)lpdwNum)

#define SDP_DetectDebugger()                                ::MessageBox( (HWND)-7,NULL,NULL,0)

#define SDP_RetrieveHardwareID(szHardwareID,iMaxLen)        ::MessageBox( (HWND)-8,(LPSTR)szHardwareID,NULL,(UINT)iMaxLen)

#define SDP_RunApplicationFunction()                        ::MessageBox( (HWND)-9,NULL,NULL,0)


#endif
