/* PELock v1.06, Bartosz Wojcik */
#ifndef __PELOCK__
#define __PELOCK__

/* license key system callbacks */

/* retrieve registration name from license key file */
#define GetRegistrationName(szRegistrationName,iMaxLen) GetWindowText( (HWND)-1,szRegistrationName,iMaxLen)

/* set license key path (other than application directory */
#define SetRegistrationKey(szRegistrationKeyPath) GetWindowText( (HWND)-2,szRegistrationKeyPath,0)

/* get user defined key data */
#define GetKeyData(iValue) GetWindowText( (HWND)-3,NULL,iValue)

/* get hardware id */
#define GetHardwareId(szHardwareId,iMaxLen) GetWindowText( (HWND)-4,szHardwareId,iMaxLen)

/* get key expiration date */
#define GetKeyExpirationDate(lpSystemTime) GetWindowText( (HWND)-5,(LPSTR)lpSystemTime,256)


/* encryption markers */

/* #undef __PELOCK_MACROS__ */

/* borland cpp compiler */

#ifndef __PELOCK_MACROS__

 #ifdef __BORLANDC__

 #define DEMO_START __emit__  (0xEB,0x07,0xEB,0xFC,0xEB,0xFA,0xEB,0xFA,0xC7);
 #define DEMO_END   __emit__  (0xEB,0x06,0xEB,0xFB,0xEB,0xFA,0xEB,0xFC,0xEB, \
                               0x06,0xCD,0x20,0xEB,0xFD,0xCD,0x20,0xEB,0x07, \
                               0xEB,0xFB,0xEB,0xFA,0xEB,0xFC,0xC8);

 #define CRYPT_START __emit__ (0xEB,0x07,0xEB,0x05,0xEB,0x03,0xEB,0x01,0xC7);
 #define CRYPT_END   __emit__ (0xEB,0x06,0xEB,0x00,0xEB,0x00,0xEB,0x00,0xEB, \
                               0x06,0xCD,0x20,0xEB,0xFD,0xCD,0x20,0xEB,0x07, \
                               0xEB,0x05,0xEB,0x03,0xEB,0x01,0xC8);

 #define CLEAR_START __emit__ (0xEB,0x07,0xEB,0xFC,0xEB,0x00,0xEB,0x01,0xC9);
 #define CLEAR_END   __emit__ (0xEB,0x06,0xEB,0x02,0xEB,0xFC,0xEB,0x00,0xEB, \
                               0x06,0xCD,0x21,0xEB,0xFA,0xCD,0x21,0xEB,0x07, \
                               0xEB,0xFC,0xEB,0xFC,0xEB,0x01,0xC9);


 #define __PELOCK_MACROS__
 #endif

#endif

/* intel cpp compiler */

#ifndef __PELOCK_MACROS__

 #ifdef __ICL

 #define DEMO_START \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0xFA \
 __asm __emit 0xEB \
 __asm __emit 0xFA \
 __asm __emit 0xC7

 #define DEMO_END \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xEB \
 __asm __emit 0xFB \
 __asm __emit 0xEB \
 __asm __emit 0xFA \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xCD \
 __asm __emit 0x20 \
 __asm __emit 0xEB \
 __asm __emit 0xFD \
 __asm __emit 0xCD \
 __asm __emit 0x20 \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0xFB \
 __asm __emit 0xEB \
 __asm __emit 0xFA \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xC8


 #define CRYPT_START \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0x05 \
 __asm __emit 0xEB \
 __asm __emit 0x03 \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC7

 #define CRYPT_END \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xCD \
 __asm __emit 0x20 \
 __asm __emit 0xEB \
 __asm __emit 0xFD \
 __asm __emit 0xCD \
 __asm __emit 0x20 \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0x05 \
 __asm __emit 0xEB \
 __asm __emit 0x03 \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC8


 #define CLEAR_START \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC9

 #define CLEAR_END \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xEB \
 __asm __emit 0x02 \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xCD \
 __asm __emit 0x21 \
 __asm __emit 0xEB \
 __asm __emit 0xFA \
 __asm __emit 0xCD \
 __asm __emit 0x21 \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC9


 #define __PELOCK_MACROS__

 #endif
#endif


/* LCC by Jacob Navia */

#ifndef __PELOCK_MACROS__

 #ifdef __LCC__

 #define DEMO_START  _asm(" .byte\t0xEB,0x07,0xEB,0xFC,0xEB,0xFA,0xEB,0xFA,0xC7");
 #define DEMO_END    _asm(" .byte\t0xEB,0x06,0xEB,0xFB,0xEB,0xFA,0xEB,0xFC,0xEB, \
                                   0x06,0xCD,0x20,0xEB,0xFD,0xCD,0x20,0xEB,0x07, \
                                   0xEB,0xFB,0xEB,0xFA,0xEB,0xFC,0xC8");

 #define CRYPT_START _asm(" .byte\t0xEB,0x07,0xEB,0x05,0xEB,0x03,0xEB,0x01,0xC7");
 #define CRYPT_END   _asm(" .byte\t0xEB,0x06,0xEB,0x00,0xEB,0x00,0xEB,0x00,0xEB, \
                                   0x06,0xCD,0x20,0xEB,0xFD,0xCD,0x20,0xEB,0x07, \
                                   0xEB,0x05,0xEB,0x03,0xEB,0x01,0xC8");

 #define CLEAR_START _asm(" .byte\t0xEB,0x07,0xEB,0xFC,0xEB,0x00,0xEB,0x01,0xC9");
 #define CLEAR_END   _asm(" .byte\t0xEB,0x06,0xEB,0x02,0xEB,0xFC,0xEB,0x00,0xEB, \
                                  0x06,0xCD,0x21,0xEB,0xFA,0xCD,0x21,0xEB,0x07, \
                                  0xEB,0xFC,0xEB,0xFC,0xEB,0x01,0xC9");

 #define __PELOCK_MACROS__
 #endif

#endif


#ifndef __PELOCK_MACROS__

 #define DEMO_START \
 __asm _emit 0xEB \
 __asm _emit 0x07 \
 __asm _emit 0xEB \
 __asm _emit 0xFC \
 __asm _emit 0xEB \
 __asm _emit 0xFA \
 __asm _emit 0xEB \
 __asm _emit 0xFA \
 __asm _emit 0xC7

 #define DEMO_END \
 __asm _emit 0xEB \
 __asm _emit 0x06 \
 __asm _emit 0xEB \
 __asm _emit 0xFB \
 __asm _emit 0xEB \
 __asm _emit 0xFA \
 __asm _emit 0xEB \
 __asm _emit 0xFC \
 __asm _emit 0xEB \
 __asm _emit 0x06 \
 __asm _emit 0xCD \
 __asm _emit 0x20 \
 __asm _emit 0xEB \
 __asm _emit 0xFD \
 __asm _emit 0xCD \
 __asm _emit 0x20 \
 __asm _emit 0xEB \
 __asm _emit 0x07 \
 __asm _emit 0xEB \
 __asm _emit 0xFB \
 __asm _emit 0xEB \
 __asm _emit 0xFA \
 __asm _emit 0xEB \
 __asm _emit 0xFC \
 __asm _emit 0xC8


 #define CRYPT_START \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0x05 \
 __asm __emit 0xEB \
 __asm __emit 0x03 \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC7

 #define CRYPT_END \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xCD \
 __asm __emit 0x20 \
 __asm __emit 0xEB \
 __asm __emit 0xFD \
 __asm __emit 0xCD \
 __asm __emit 0x20 \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0x05 \
 __asm __emit 0xEB \
 __asm __emit 0x03 \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC8


 #define CLEAR_START \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC9

 #define CLEAR_END \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xEB \
 __asm __emit 0x02 \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0x00 \
 __asm __emit 0xEB \
 __asm __emit 0x06 \
 __asm __emit 0xCD \
 __asm __emit 0x21 \
 __asm __emit 0xEB \
 __asm __emit 0xFA \
 __asm __emit 0xCD \
 __asm __emit 0x21 \
 __asm __emit 0xEB \
 __asm __emit 0x07 \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0xFC \
 __asm __emit 0xEB \
 __asm __emit 0x01 \
 __asm __emit 0xC9

#endif


#endif
