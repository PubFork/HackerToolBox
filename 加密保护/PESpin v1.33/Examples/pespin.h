/* PESpin v1.1 - v1.3 encryption markers */


/* borland cpp compiler */

#ifndef __PESPIN_MACROS__

 #ifdef __BORLANDC__

 #define CLEAR_START __emit__ (0xEB, 0x24, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, \
                               0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, \
                               0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, \
                               0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0x66, 0xBD, \
                               0x00, 0x00);
  
 #define CLEAR_END   __emit__ (0xEB, 0x33, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                               0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                               0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                               0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                               0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                               0xFA, 0xFA, 0xFA, 0xFA, 0x66, 0xBD, 0x00, 0x00); 
  
 #define CRYPT_START __emit__ (0xEB, 0x08, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0x27, 0x54);
 #define CRYPT_END   __emit__ (0xEB, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x54, 0x37);

 #define __PESPIN_MACROS__
 #endif

#endif



/* LCC by Jacob Navia */

#ifndef __PESPIN_MACROS__

 #ifdef __LCC__

 #define CLEAR_START _asm(" .byte\t0xEB, 0x24, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, \
                                   0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, \
                                   0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, \
                                   0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0xFB, 0x66, 0xBD, \
                                   0x00, 0x00");
  
 #define CLEAR_END _asm(" .byte\t0xEB, 0x33, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                                   0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                                   0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                                   0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                                   0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, \
                                   0xFA, 0xFA, 0xFA, 0xFA, 0x66, 0xBD, 0x00, 0x00");                        

 #define CRYPT_START _asm(" .byte\t0xEB,0x08,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0x27,0x54");
 #define CRYPT_END   _asm(" .byte\t0xEB, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x54, 0x37");  

 #define __PESPIN_MACROS__
 #endif

#endif



#ifndef __PESPIN_MACROS__

#define CLEAR_START \
	__asm __emit	0xEB \
	__asm __emit	0x24 \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0xFB \
	__asm __emit	0x66 \
	__asm __emit	0xBD \
	__asm __emit	0x00 \
	__asm __emit	0x00 \
	
#define CLEAR_END \
	__asm __emit	0xEB \
	__asm __emit	0x33 \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0xFA \
	__asm __emit	0x66 \
	__asm __emit	0xBD \
	__asm __emit	0x00 \
	__asm __emit	0x00 \
	
	
 #define CRYPT_START  \
	__asm __emit	0xEB \
	__asm __emit	0x08 \
	__asm __emit	0xFC \
	__asm __emit	0xFC \
	__asm __emit	0xFC \
	__asm __emit	0xFC \
	__asm __emit	0xFC \
	__asm __emit	0xFC \
	__asm __emit	0x27 \
	__asm __emit	0x54 \

 #define CRYPT_END  \
	__asm __emit	0xEB \
	__asm __emit	0x08 \
	__asm __emit	0xFD \
	__asm __emit	0xFD \
	__asm __emit	0xFD \
	__asm __emit	0xFD \
	__asm __emit	0xFD \
	__asm __emit	0xFD \
	__asm __emit	0x54 \
	__asm __emit	0x37 \
	
	
#endif	